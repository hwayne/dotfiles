" vim:fdm=marker

" vim-session
let g:session_autosave = 'no'
"

" vim-rails
noremap <leader>r :AV<cr>
noremap <leader>? :Gblame<cr>
noremap <leader>gb :.Gbr!<cr>
"

" NERDTree

let NERDTreeMinimalUI=1
let NERDTreeShowBookmarks=1
let NERDTreeShowLineNumbers=1
let NERDTreeIgnore = ['\~$', '\.pyc']
nmap <leader>n :NERDTreeToggle<CR>
nmap <leader>f :NERDTreeFind<CR>

" Neoterm

set statusline+=%#NeotermTestRunning#%{neoterm#test#status('running')}%*
set statusline+=%#NeotermTestSuccess#%{neoterm#test#status('success')}%*
set statusline+=%#NeotermTestFailed#%{neoterm#test#status('failed')}%*
nnoremap <silent> <leader>ta :call neoterm#test#run('all')<cr>
nnoremap <silent> <leader>tf :call neoterm#test#run('file')<cr>
nnoremap <silent> <leader>te :call neoterm#test#run('current')<cr>
nnoremap <silent> <leader>tr :call neoterm#test#rerun()<cr>


" Ctrl-P

let g:ctrlp_working_path_mode = 'r'
nnoremap <leader><c-p> :CtrlPQuickfix<CR>

" Switch

noremap - :Switch<CR>
let g:switch_custom_definitions = [["create", "build" ], ["allow", "expect"], ["to", "not_to"]]

"
" misc

nmap <leader>S :Scratch<CR>
nmap <leader>u :UndotreeToggle<CR>
nmap <F8> :TagbarToggle<CR>
nmap ]h <Plug>GitGutterNextHunk
nmap [h <Plug>GitGutterPrevHunk

let g:pymode_lint_on_write = 0

let g:neoterm_position = 'vertical'
"
