" vim:fdm=marker

" exiting insert mode {{{

:inoremap jk <esc>
:inoremap jk <esc>

" }}}
" filesystems {{{

" save file path for c/p
noremap \l :let @+ = expand('%')<cr>

noremap \\ :wa<return>
noremap za :wa<cr>:qa<cr>
noremap zc :qa!<cr>

" }}}
" navigation {{{

"make k act like inverse j
nnoremap k i<cr><esc>

"make capital h/l like super h/l
noremap ^ h
noremap $ l
noremap h ^
noremap l $

"easier navigation of windows
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

"train to use hjkl less
noremap jj <nop>
noremap kk <nop>
noremap hh <nop>
noremap ll <nop>

" }}}
" line manipulation {{{

"free line adding

noremap go o<esc>
noremap gO O<esc>

"remote move/copy line

noremap <leader>dk :<C-U>execute "normal! ".v:count."kdd".v:count."jkPj"<CR>
noremap <leader>k :<C-U>execute "normal! ".v:count."kyy".v:count."jPj"<CR>
noremap <leader>dj :<C-U>execute "normal! ".v:count."jdd".v:count."kjP"<CR>
noremap <leader>j :<C-U>execute "normal! ".v:count."jyy".v:count."kp"<CR>

" }}}
" macro trix {{{

"easier macro repeating and avoid ex mode
noremap q @@

"highlight words without moving cursor
noremap <leader><leader>h *#
"noremap <leader><leader>s ^yyp^cwexpectf,c3l.f'xa.tohavebeencalled()

" }}}
" misc {{{

noremap <leader>ds :%s/\s*$//<cr>:noh<cr>

noremap Y y$

" }}}
