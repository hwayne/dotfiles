 " Modeline and Notes {
 " vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
 
 "                    __ _ _____              _
 "         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
 "        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
 "        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
 "        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
 "            |_|
 
 "   This is the personal .vimrc.bundles file of Steve Francia.
 "   While much of it is beneficial for general use, I would
 "   recommend picking out the parts you want and understand.
 
 "   You can find me at http://spf13.com
 " }
 
 " Environment {
 
     " Basics {
         set nocompatible        " Must be first line
         set background=dark     " Assume a dark background
     " }
 
     " Windows Compatible {
         " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
         " across (heterogeneous) systems easier.
         if has('win32') || has('win64')
           set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/afer
 
           " Be nice and check for multi_byte even if the config requires
           " multi_byte support most of the time
           if has("multi_byte")
             " Windows cmd.exe still uses cp850. If Windows ever moved to
             " Powershell as the primary terminal, this would be utf-8
             set termencoding=cp850
             " Let Vim use utf-8 internally, because many scripts require this
             set encoding=utf-8
             setglobal fileencoding=utf-8
             " Windows has traditionally used cp1252, so it's probably wise to
             " fallback into cp1252 instead of eg. iso-8859-15.
             " Newer Windows files might contain utf-8 or utf-16 LE so we might
             " want to try them first.
             set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
           endif
         endif
     " }
 
     " Setup Bundle Support {
         " The next three lines ensure that the ~/.vim/bundle/ system works
         filetype off
         set rtp+=~/.vim/bundle/vundle
         call vundle#rc()
     " }
 
 " }
 
 " Bundles {
 
     " Deps
         Bundle 'gmarik/vundle'
         Bundle 'MarcWeber/vim-addon-mw-utils'
         Bundle 'tomtom/tlib_vim'
         if executable('ack-grep')
             let g:ackprg="ack-grep -H --nocolor --nogroup --column
             Bundle 'mileszs/ack.vim'
         elseif executable('ack')
             Bundle 'mileszs/ack.vim'
         elseif executable('ag')
             Bundle 'mileszs/ack.vim'
             let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
         endif
 
     " Use local bundles if available {
         if filereadable(expand("~/.vimrc.bundles.local"))
             source ~/.vimrc.bundles.local
         endif
     " }
 
     " Use fork bundles if available {
         if filereadable(expand("~/.vimrc.bundles.fork"))
             source ~/.vimrc.bundles.fork
         endif
     " }
 
     " In your .vimrc.bundles.local file
     " list only the plugin groups you will use
     if !exists('g:spf13_bundle_groups')
         let g:spf13_bundle_groups=['added', 'general', 'neocomplete', 'programming', 'php', 'ruby', 'python', 'go', 'twig', 'javascript', 'fs', 'html', 'misc', 'scala']
     endif
 
     " To override all the included bundles, put
     " g:override_spf13_bundles = 1
     " in your .vimrc.bundles.local file
     if !exists("g:override_spf13_bundles")
 
         if count(g:spf13_bundle_groups, 'added')
             Bundle 'tpope/vim-repeat' 
             Bundle 'hwayne/vim-pivot'
"             Bundle 'vim-scripts/argtextobj.vim'
             Bundle 'AndrewRadev/switch.vim'
             Bundle 'kshenoy/vim-signature'
             Bundle 'chrisbra/csv.vim'
             Bundle 'wesQ3/vim-windowswap'
             Bundle 'chrisbra/unicode.vim'
             Bundle 'mtth/scratch.vim'
         endif
     " General
         if count(g:spf13_bundle_groups, 'general')
             Bundle 'Xuyuanp/nerdtree'
             Bundle 'kana/vim-textobj-user'
             Bundle 'altercation/vim-colors-solarized'
             Bundle 'spf13/vim-colors'
             Bundle 'tpope/vim-surround'
             Bundle 'ctrlpvim/ctrlp.vim'
"             " Bundle 'terryma/vim-multiple-cursors'
"             Bundle 'vim-scripts/sessionman.vim'
             Bundle 'matchit.zip'
             Bundle 'kien/rainbow_parentheses.vim'

"             Bundle 'Lokaltog/vim-easymotion'
"             Bundle 'godlygeek/csapprox'
"             Bundle 'jistr/vim-nerdtree-tabs'
             Bundle 'flazz/vim-colorschemes'
             Bundle 'mbbill/undotree'
             Bundle 'myusuf3/numbers.vim'
             Bundle 'nathanaelkane/vim-indent-guides'
"             if !exists('g:spf13_no_views')
"                 Bundle 'vim-scripts/restore_view.vim'
"             endif
             Bundle 'airblade/vim-gitgutter'
"             Bundle 'tpope/vim-abolish.git'

         endif

"     " General Programming
         if count(g:spf13_bundle_groups, 'programming')
"             " Pick one of the checksyntax, jslint, or syntastic
             Bundle 'scrooloose/syntastic'
             Bundle 'tpope/vim-fugitive'
"             Bundle 'mattn/webapi-vim'
"             Bundle 'mattn/gist-vim'
             Bundle 'scrooloose/nerdcommenter'
"             Bundle 'godlygeek/tabular'
             if executable('ctags')
                 Bundle 'majutsushi/tagbar'
             endif
         endif

     " Snippets & AutoComplete
         if count(g:spf13_bundle_groups, 'snipmate')
              Bundle 'SirVer/ultisnips'
              Bundle 'honza/vim-snippets'
             " Source support_function.vim to support vim-snippets.
             if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
                 source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
             endif
         elseif count(g:spf13_bundle_groups, 'neocomplcache')
               Bundle 'SirVer/ultisnips'
             " Bundle 'Shougo/neocomplcache'
             " Bundle 'Shougo/neosnippet'
             " Bundle 'honza/vim-snippets'
         elseif count(g:spf13_bundle_groups, 'neocomplete')
              Bundle 'SirVer/ultisnips'
              Bundle 'Shougo/neocomplete.vim.git'
              Bundle 'Shougo/neosnippet'
              Bundle 'honza/vim-snippets'
              "Bundle 'Valloric/YouCompleteMe'
         endif

"     " PHP
"         if count(g:spf13_bundle_groups, 'php')
"         endif

     " Python
         if count(g:spf13_bundle_groups, 'pythons')
"             " Pick either python-mode or pyflakes & pydoc
              " Bundle 'klen/python-mode'
              Bundle 'python.vim'
              Bundle 'python_match.vim'
              Bundle 'ameade/qtpy-vim'
"             " Bundle 'pythoncomplete'
         endif

"     " Javascript
         if count(g:spf13_bundle_groups, 'javascript')
             Bundle 'elzr/vim-json'
             Bundle 'groenewege/vim-less'
             Bundle 'claco/jasmine.vim'
             Bundle 'burnettk/vim-angular'
             Bundle 'pangloss/vim-javascript'
"             Bundle 'briancollins/vim-jst'
             Bundle 'kchmck/vim-coffee-script'
             Bundle 'lukaszkorecki/CoffeeTags'
         endif

"     " Java
"         if count(g:spf13_bundle_groups, 'scala')
"         endif

     " F#
         if count(g:spf13_bundle_groups, 'fs')
             Bundle 'kongo2002/fsharp-vim'
         endif

"     " HTML
         if count(g:spf13_bundle_groups, 'html')
             Bundle 'amirh/HTML-AutoCloseTag'
             Bundle 'tpope/vim-haml'
             Bundle 'valloric/MatchTagAlways'
         endif

"     " Ruby
         if count(g:spf13_bundle_groups, 'ruby')
             Bundle 'thoughtbot/vim-rspec'
             Bundle 'tpope/vim-rails'
             Bundle 'nono/vim-handlebars'
             Bundle 'nelstrom/vim-textobj-rubyblock'
"             Bundle 'juvenn/mustache.vim'
             let g:rubycomplete_buffer_loading = 1
             let g:rubycomplete_classes_in_global = 1
             let g:rubycomplete_rails = 1
         endif

"     " Go Lang
         if count(g:spf13_bundle_groups, 'go')
             Bundle 'jnwhiteh/vim-golang'
             Bundle 'spf13/vim-gocode'
         endif

"     " Misc
"         if count(g:spf13_bundle_groups, 'misc')
"         endif

"     " Twig
"         if count(g:spf13_bundle_groups, 'twig')
"         endif
     endif

" " }

 " General {
     " set autowrite                  " automatically write a file when leaving a modified buffer
     set shortmess+=filmnrxoOtT      " Abbrev. of messages (avoids 'hit enter')
 " }
 
